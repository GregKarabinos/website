# CircleCI configuration file

version: 2.1

orbs:
  gcp-cli: circleci/gcp-cli@2.1.0

jobs:
  build:
    docker:
      - image: cimg/go:1.16-node

    steps:
      - checkout

      # Environment
      - run:
          name: Print environment information
          command: |
            set -x
            go version
            go env
            node --version
            npm --version

      # Install
      - restore_cache:
          keys:
            - v4-go-deps-{{ checksum "app/go.mod" }}-{{ checksum "tools/go.mod" }}
            - v4-go-deps-
      - run:
          name: Install Go-based tooling
          working_directory: 'tools'
          command: ./install-tools
      - run:
          name: Install Go app dependencies
          working_directory: 'app'
          command: go install -v
      - save_cache:
          key: v4-go-deps-{{ checksum "app/go.mod" }}-{{ checksum "tools/go.mod" }}
          paths:
            # Observed from `go env` output, above
            - ~/go
            - ~/.cache

      # Go tests
      - run:
          name: Run Go tests
          working_directory: 'app'
          command: go test -v ./...

      # NPM tests
      - run:
          name: Install Node-based tooling
          command: npm install
      - run:
          name: Run NPM lints
          working_directory: 'app'
          command: npm run lint

      # Site build
      - run:
          name: Build site
          command: npm run build
      - store_artifacts:
          path: app/public
      - persist_to_workspace:
          root: .
          paths:
            - app/public

  deploy:
    executor: gcp-cli/google
    steps:
      # No need to deploy branches unless the branch is worthy of having
      # had a PR opened for it. This allows branches to be pushed with CI
      # but not worry about over-populating the versions in App Engine.
      # TODO: Figure out how to do this with a "when" clause for this
      # entire job to make the behavior clearer in commit status.
      - when:
          # Skip this step on the main branch, where we always deploy.
          condition:
            not:
              equal: [ main, << pipeline.git.branch >> ]
          steps:
            - run:
                name: Abort on non-main branch if a PR is not open
                command: |
                  if [ -z "${CIRCLE_PULL_REQUEST}" ]; then
                    circleci-agent step halt
                  fi
      # Uses pre-defined environment variables:
      # https://circleci.com/developer/orbs/orb/circleci/gcp-cli#commands-initialize
      # The service account was provisioned according to the instructions here,
      # with the exception of scoping the iam.serviceAccountUser role to the
      # specific App Engine service account, and the compute.storageAdmin role
      # to the specific storage buckets, ref:
      # https://cloud.google.com/appengine/docs/standard/go/roles#recommended_role_for_application_deployment
      - gcp-cli/initialize
      - run:
          name: Disable gcloud CLI prompts
          command: gcloud config set core/disable_prompts true
      - checkout
      - attach_workspace:
          at: .
      - run:
          name: Install additional dependencies
          command: |
            apt-get install -y jq
      - run:
          name: Deploy to App Engine
          command: ./scripts/deploy-appengine
      - run:
          name: Cleanup older versions in App Engine
          # We keep 10 versions as this is reasonably under 15, the max allowed
          # for the free tier:
          # https://cloud.google.com/appengine/docs/standard/go/an-overview-of-app-engine#limits
          command: ./scripts/cleanup-appengine default 10

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
